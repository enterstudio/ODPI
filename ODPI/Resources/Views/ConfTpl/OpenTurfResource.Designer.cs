//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18033
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODPI.Resources.Views.ConfTpl {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class OpenTurfResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OpenTurfResource() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ODPI.Resources.Views.ConfTpl.OpenTurfResource", typeof(OpenTurfResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a login username to use for bit.ly URL shortening.
        /// </summary>
        public static string ALoginUsernameToUse {
            get {
                return ResourceManager.GetString("ALoginUsernameToUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à an API key to use for URL Shortening.
        /// </summary>
        public static string AnAPIKeyToUse {
            get {
                return ResourceManager.GetString("AnAPIKeyToUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application Name.
        /// </summary>
        public static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application Settings.
        /// </summary>
        public static string ApplicationSettings {
            get {
                return ResourceManager.GetString("ApplicationSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application settings will allow ODAF OpenTurf to be customized when installed on Azure.
        ///        You will need to provide the following.
        /// </summary>
        public static string ApplicationSettingsWillAllow {
            get {
                return ResourceManager.GetString("ApplicationSettingsWillAllow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à App Url.
        /// </summary>
        public static string AppUrl {
            get {
                return ResourceManager.GetString("AppUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bit.ly API Key.
        /// </summary>
        public static string BitlyAPIKey {
            get {
                return ResourceManager.GetString("BitlyAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bit.ly Login.
        /// </summary>
        public static string BitlyLogin {
            get {
                return ResourceManager.GetString("BitlyLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Callback Url.
        /// </summary>
        public static string CallbackUrl {
            get {
                return ResourceManager.GetString("CallbackUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Click to see how.
        /// </summary>
        public static string ClickToSeeHow {
            get {
                return ResourceManager.GetString("ClickToSeeHow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Consumer Key.
        /// </summary>
        public static string ConsumerKey {
            get {
                return ResourceManager.GetString("ConsumerKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à consumer key provided by Twitter.
        /// </summary>
        public static string ConsumerKeyProvidedByTwitter {
            get {
                return ResourceManager.GetString("ConsumerKeyProvidedByTwitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Consumer Secret.
        /// </summary>
        public static string ConsumerSecret {
            get {
                return ResourceManager.GetString("ConsumerSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à consumer secret provided by Twitter.
        /// </summary>
        public static string ConsumerSecretProvidedByTwitter {
            get {
                return ResourceManager.GetString("ConsumerSecretProvidedByTwitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Database Hostname.
        /// </summary>
        public static string DatabaseHostname {
            get {
                return ResourceManager.GetString("DatabaseHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Database Name.
        /// </summary>
        public static string DatabaseName {
            get {
                return ResourceManager.GetString("DatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you do not have a SQL Azure database already created, click &lt;a href=&apos;#&apos; data-toggle=&apos;modal&apos;
        ///            data-target=&apos;#CreateSqlAzureDb&apos; rel=&apos;tooltip&apos; data-original-title=&apos;Click to see how&apos;&gt;
        ///            here&lt;/a&gt; for instructions to create a SQL Azure database.&lt;/p&gt;.
        /// </summary>
        public static string IfYouDoNotHaveAlready {
            get {
                return ResourceManager.GetString("IfYouDoNotHaveAlready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à name of the application in the title screen.
        /// </summary>
        public static string NameOfTheApplication {
            get {
                return ResourceManager.GetString("NameOfTheApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Once the database is created, enter the values below..
        /// </summary>
        public static string OnceDatabaseIsCreated {
            get {
                return ResourceManager.GetString("OnceDatabaseIsCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ODAF OpenTurf has Twitter integration and will require some details to be functional.
        ///        Please refer to Twitter Developer documentation at &lt;a href=&quot;https://dev.twitter.com&quot;&gt;
        ///            https://dev.twitter.com&lt;/a&gt; on how to setup appropriate twitter keys. You will
        ///        need to provide the following.
        /// </summary>
        public static string OpenTurfHasTwitterIntegration {
            get {
                return ResourceManager.GetString("OpenTurfHasTwitterIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à password you created.
        /// </summary>
        public static string PasswordYouCreated {
            get {
                return ResourceManager.GetString("PasswordYouCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à same callback URL setup when creating app on Twitter.
        /// </summary>
        public static string SameCallBackURLSetup {
            get {
                return ResourceManager.GetString("SameCallBackURLSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SQL Azure Info.
        /// </summary>
        public static string SQLAzureInfo {
            get {
                return ResourceManager.GetString("SQLAzureInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Twitter Settings.
        /// </summary>
        public static string TwitterSettings {
            get {
                return ResourceManager.GetString("TwitterSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Twitter Username to be used as Admin.
        /// </summary>
        public static string TwitterUsernameToUse {
            get {
                return ResourceManager.GetString("TwitterUsernameToUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Username.
        /// </summary>
        public static string Username {
            get {
                return ResourceManager.GetString("Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à username that will be used for administration.
        /// </summary>
        public static string UsernameThatWillBeUsed {
            get {
                return ResourceManager.GetString("UsernameThatWillBeUsed", resourceCulture);
            }
        }
    }
}
