//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18033
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODPI.Resources.Views.Tpl {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AzureConfigResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AzureConfigResource() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ODPI.Resources.Views.Tpl.AzureConfigResource", typeof(AzureConfigResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à accountname.
        /// </summary>
        public static string Accountname {
            get {
                return ResourceManager.GetString("Accountname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add the downloaded certificate to your Windows Azure Managment Console. Click &lt;a href=&quot;#&quot; data-toggle=&quot;modal&quot;
        ///                            data-target=&quot;#add-certificate&quot; id=&quot;cert-doc-link&quot;&gt;here&lt;/a&gt; for details on uploading the certificated..
        /// </summary>
        public static string AddTheDownloadedCertificate {
            get {
                return ResourceManager.GetString("AddTheDownloadedCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automated Installer.
        /// </summary>
        public static string AutomatedInstaller {
            get {
                return ResourceManager.GetString("AutomatedInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Azure Config.
        /// </summary>
        public static string AzureConfig {
            get {
                return ResourceManager.GetString("AzureConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Azure Info.
        /// </summary>
        public static string AzureInfo {
            get {
                return ResourceManager.GetString("AzureInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Click to see how.
        /// </summary>
        public static string ClickToSeeHow {
            get {
                return ResourceManager.GetString("ClickToSeeHow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configure Components.
        /// </summary>
        public static string ConfigureComponents {
            get {
                return ResourceManager.GetString("ConfigureComponents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Continue.
        /// </summary>
        public static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finalize install procedure.
        /// </summary>
        public static string FinalizeInstallProcedure {
            get {
                return ResourceManager.GetString("FinalizeInstallProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Finally we require the credentials for your Azure Table Storage for the subscription
        ///                    that we will be deploying to so that we can move the packages properly to Azure
        ///                    to be deployed.  If you have not created a table storage account click &lt;a href=&quot;#&quot; data-toggle=&quot;modal&quot; data-target=&quot;#createTableStorage&quot;&gt;here&lt;/a&gt; for details on how to create one..
        /// </summary>
        public static string FinallyWeRequireTheCredentials {
            get {
                return ResourceManager.GetString("FinallyWeRequireTheCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Go Back.
        /// </summary>
        public static string GoBack {
            get {
                return ResourceManager.GetString("GoBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you would rather use the manual install, simply click the skip button below.
        ///                If you would like to use the automated installation please follow the instructions
        ///                below..
        /// </summary>
        public static string IfYouWouldRatherUseManualInstall {
            get {
                return ResourceManager.GetString("IfYouWouldRatherUseManualInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install.
        /// </summary>
        public static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installation Types.
        /// </summary>
        public static string InstallationTypes {
            get {
                return ResourceManager.GetString("InstallationTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à long key string.
        /// </summary>
        public static string LongKeyString {
            get {
                return ResourceManager.GetString("LongKeyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual Installer.
        /// </summary>
        public static string ManualInstaller {
            get {
                return ResourceManager.GetString("ManualInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;strong&gt;NOTE:&lt;/strong&gt; The Installer can automatically deploy your package(s) for
        ///                you, but you MUST install a generated certificate into the Azure Management Console.
        ///                The deploy process will check your Azure account for a certificate, and will not
        ///                move on to the next step unless there’s a certificate..
        /// </summary>
        public static string NoteTheInstallerCanAutomatically {
            get {
                return ResourceManager.GetString("NoteTheInstallerCanAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ODPI can automatically deploy your package(s) for you but you first must follow these steps..
        /// </summary>
        public static string ODPICanAutomaticallyDeploy {
            get {
                return ResourceManager.GetString("ODPICanAutomaticallyDeploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ODPI has two ways to configure and install your components onto the Windows Azure
        ///                platform..
        /// </summary>
        public static string ODPIHasTwoWays {
            get {
                return ResourceManager.GetString("ODPIHasTwoWays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Once you have downloaded and uploaded the certificate, enter your Subscription ID
        ///                    found on the Management Console.  Click &lt;a href=&quot;#&quot; data-toggle=&quot;modal&quot; data-target=&quot;#subscriptionIdHelp&quot;&gt;here&lt;/a&gt; for details on getting your subscription ID..
        /// </summary>
        public static string OnceYouHaveDownloadedAndUploaded {
            get {
                return ResourceManager.GetString("OnceYouHaveDownloadedAndUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Primary Access Key.
        /// </summary>
        public static string PrimaryAccessKey {
            get {
                return ResourceManager.GetString("PrimaryAccessKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Progress:.
        /// </summary>
        public static string Progress {
            get {
                return ResourceManager.GetString("Progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select components to install.
        /// </summary>
        public static string SelectComponentsToInstall {
            get {
                return ResourceManager.GetString("SelectComponentsToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skip.
        /// </summary>
        public static string Skip {
            get {
                return ResourceManager.GetString("Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start by downloading this &lt;a id=&quot;certlink&quot; href=&quot;/Auto/Certificate?fileName=&quot;&gt;Generated
        ///                        Certificate&lt;/a&gt; and saving it on your local computer.  Remember the location you saved it to..
        /// </summary>
        public static string StartByDownloading {
            get {
                return ResourceManager.GetString("StartByDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Storage Account Name.
        /// </summary>
        public static string StorageAccountName {
            get {
                return ResourceManager.GetString("StorageAccountName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Subscription Id.
        /// </summary>
        public static string SubscriptionId {
            get {
                return ResourceManager.GetString("SubscriptionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à subscription key for azure.
        /// </summary>
        public static string SubscriptionKeyForAzure {
            get {
                return ResourceManager.GetString("SubscriptionKeyForAzure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Automated installer will allow you to double check all of your configuration
        ///                prior to Automatically installing the package to save you the most time..
        /// </summary>
        public static string TheAutomatedInstallerWillAllow {
            get {
                return ResourceManager.GetString("TheAutomatedInstallerWillAllow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The Manual installer is the alternative means for using ODPI, where we never need
        ///                to know anything about your Azure instance. The drawback to this method is that
        ///                you will have to ensure that all of your configuration is correct ahead of time
        ///                as well as manually upload and deploy the packages using the Azure Managment
        ///                Console..
        /// </summary>
        public static string TheManualInstallerIsTheAlternative {
            get {
                return ResourceManager.GetString("TheManualInstallerIsTheAlternative", resourceCulture);
            }
        }
    }
}
